# Все используемые константы (то, что никак не меняется где бы то ни было)
win_w = 800  # Ширина окна
win_h = int(3 * win_w / 4)  # Высота окна
scaling = win_w / 800  # Масштаб (все константы лучше задавать через него. Например: spd = 7 * scaling)
bull_w = 50  # Размер пули (диаметр)
bonus_w = 60  # Размер бонуса (диаметр

# Константы, необходимые для отрисовки самолётика
pl_w = 141 * scaling  # Ширина фигуры самолётика
pl_h = pl_w / 3  # Высота фигуры самолётика

midle_x = (win_w - pl_w) / 2  # Координаты самолётика, при которых он отобр. в центре экрана
midle_y = (win_h - pl_h) / 2
pl_x0 = midle_x  # Стартовыеоординаты самолётика
pl_y0 = midle_y
bull_w = 50  # Размер пули (диаметр)
bonus_w = 30  # Размер бонуса (диаметр
bullet_speed_init = 2
bullet_speed_add = 0.5
bonus_speed = 3 #скорость +life можем менять
n_bon = 3
#количество бонусов +life,находящихся на экране, которое можно изменять
t_cont = 0
# счетчик времени для контролирования нахождения бонусов +life на экране
t_ext = 200
# количество ходов игры (время), через которое выпускается новые бонус. можно редактировать

spd = 7  # Скорость самолетика вдоль оси OX
pl_g = 0.6  # Ускорение свободного самолёта
a_down = pl_g * 1.2  # Ускорение самолета при движении вниз
shell_r = 3  # Радиус снаряда
delay = 20
t = 1 # Время одного движения
spd_up = -8 # Скорость, приобретаемая при движении вверх

invulnerability_t = 100  # Время неуязвимости после потери жизни
t_vul = 0  # Счетчик который отвечает за учет invulnerability_t в процедуре check_lives()
t_add = 5 # Для счетчика , можно изменять в зависимости от того, сколько должен самолет быть не уязвимым
rescue_spd = 2 * spd

# Необходимо ограничить движение самолётика вдоль оси Х
brd = spd  # min расстояние на которое самолетик может приблизится к краям экрана

# Константы, необходимые для отрисовки облаков
cld_w = int(147 * scaling)
cld_h = int(95 * scaling)
cld_n = 6
shift = int(0.3 * cld_h)

cld_v = 4 * scaling  # Скорость движения облаков, с ней можно играться
